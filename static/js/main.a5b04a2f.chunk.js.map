{"version":3,"sources":["GlobalStyle.tsx","definition.ts","Footer.tsx","Graph.tsx","BigButton.tsx","ColorPicker.tsx","BigInput.tsx","GraphSelector.tsx","App.tsx","index.js"],"names":["color","GlobalStyle","createGlobalStyle","newData","defs","data","label","direction","form","density","toDirection","dir","toForm","density_","val","_density","s","Number","Footer","Wrapper","List","Item","role","title","aria-label","href","styled","footer","ul","li","width","height","padding","axisFontSize","offsets","pointsFrom","index","og","length","offX","offY","map","x","y","offset","endX","endY","stretch","yes","f","steps","points","push","plot","_","representation","Graph","definition","useState","src","setSrc","canvas","useCallback","node","ctx","getContext","clearRect","textAlign","font","fillText","yAxis","save","translate","rotate","Math","PI","restore","xAxis","rc","rough","line","forEach","p","d","curve","stroke","rectangle","fill","filter","Boolean","fillStyle","labelFontSize","toDataURL","Center","style","fontFamily","display","ref","alt","div","BigButton","a","defaultColors","ColorPicker","onChange","showing","setShowing","onClick","backgroundColor","Popover","onChangeComplete","hex","preventDefault","target","value","colors","span","BigInput","props","rest","InputField","placeholder","Label","input","notEmpty","GraphSelector","update","e","key","updateOne","Select","Range","min","max","step","newD","Input","RangeInput","type","select","App","setDefinition","Title","newDefs","h1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5b04a2f.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const color = \"#444\";\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        margin: 40px auto 0 auto;\n        width: 66%;\n        font: 18px/1.5 -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        line-height: 1.6;\n        font-size: 18px;\n        padding: 0 10px;\n        background-color: whitesmoke;\n        color: ${color};\n    }\n`;\n\nexport default GlobalStyle;\n","export type Data = {\n    label: string,\n    direction: 'upward' | 'downward',\n    form: 'linear' | 'horizontal' | 'bell' | 'exp' | 'log';\n    density: 'infinite' | number,\n    color: string;\n};\n\nexport type Definition = {\n    title: string,\n    xAxis: string,\n    yAxis: string,\n    data: Data[]\n}\n\nexport function empty(): Definition {\n    return newData({\n        title: \"\",\n        xAxis: \"\",\n        yAxis: \"\",\n        data: []\n    });\n}\n\nexport function newData(defs: Definition): Definition {\n    const newData: Data = {\n        label: \"\",\n        direction: 'upward',\n        form: 'linear',\n        color: \"#000000\",\n        density: 'infinite'\n    };\n    return {\n        ...defs,\n        data: [...defs.data, newData],\n    }\n}\n\nexport function toDirection(dir: String): Data[\"direction\"] {\n    switch (dir) {\n        case \"downward\": return \"downward\";\n        default: return \"upward\";\n    }\n}\nexport function toForm(dir: string): Data[\"form\"] {\n    switch (dir) {\n        case \"bell\": return \"bell\";\n        case \"horizontal\": return \"horizontal\";\n        case \"exp\": return \"exp\";\n        case \"log\": return \"log\";\n        default: return \"linear\";\n    }\n}\n\nconst maxBound = 10;\nexport function density_(val: Data[\"density\"]): number {\n    return val === 'infinite' ? maxBound : val;\n}\n\nexport function _density(s: string): Data[\"density\"] {\n    const val = Number(s);\n    return val === maxBound ? 'infinite' : val;\n}","import styled from 'styled-components';\n\nexport default function Footer() {\n\n    return (\n        <Wrapper>\n            <List>\n                <Item>\n                    Made with <span role=\"img\" title=\"love\" aria-label=\"love\">♥</span> by: <a href=\"https://florius.com.ar\">Florius.com.ar</a>\n                </Item>\n                <Item>\n                    Source: <a href=\"https://github.com/jazcarate/rough-graph\">GitHub</a>\n                </Item>\n            </List>\n\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.footer`\n    text-align: center;\n    width: 100%;\n    left: 0;\n    font: 300 1rem/1.25rem SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;\n`;\n\nconst List = styled.ul`\n    list-style: none;\n    padding: 0;\n    display: inline-flex;\n`;\n\nconst Item = styled.li`\n    display: inline-block;\n    padding: 0 .4rem;\n    border-right: 1px solid #414141;\n\n    &:last-child {\n        border-right: none;\n    }\n`;","import React, { useCallback, useState } from 'react';\n\nimport rough from 'roughjs/bin/rough';\nimport styled from 'styled-components';\n\nimport { Data, Definition, density_ } from './definition';\n\ntype Props = {\n  definition: Definition;\n}\n\nconst width = 800,\n  height = 600,\n  padding = 10,\n  axisFontSize = 35,\n  titleFontSize = 50,\n  labelFontSize = 25,\n  graphPadding = 50;\n\nconst startX = padding + axisFontSize + graphPadding,\n  startY = height - padding - axisFontSize - graphPadding,\n  endX = width - padding - graphPadding,\n  endY = titleFontSize + graphPadding + padding;\n\ntype Points = [number, number][]\n\n// from 0 to 1 both in x and y\nfunction plot(f: (i: number) => number, steps = 10): Points {\n  let points: Points = [];\n  for (let x = 0; x < 1; x += 1 / steps) {\n    points.push([x, f(x)]);\n  }\n  return points;\n}\n\nfunction flip(yes: boolean, og: Points): Points {\n  if (yes)\n    return og.map(([x, y]) => [x, 1 - y]);\n  return og\n}\n\n// Transform 0-1 coordinates to canvas\nfunction stretch(og: Points): Points {\n  const xFactor = (endX - startX),\n    yFactor = (endY - startY);\n\n  return og.map(([x, y]) => [startX + xFactor * x, startY + yFactor * y]);\n}\n\n// Generated by https://www.random.org/sequences/?min=-10&max=10&col=2&format=html&rnd=new\nconst offsets = [\n  [-7, 1],\n  [0, 7],\n  [9, 10],\n  [-9, 5],\n  [4, -3],\n  [3, -8],\n  [2, -4],\n  [-2, -5],\n  [6, 8],\n  [-6, -1]\n];\n\nfunction offset(index: number, og: Points): Points {\n  const [offX, offY] = offsets[index % offsets.length];\n  return og.map(([x, y]) => [x + offX, y + offY]);\n}\n\nfunction pointsFrom(data: Data, index: number): [number, number][] {\n  return offset(index, stretch(flip(data.direction === 'downward', plot(representation(data.form), density_(data.density)))));\n}\n\n// https://www.wolframalpha.com/input/?i=plot+1+%2F+%281%2B%285*%28x-1%2F2%29%29+**+2%29**%283%2F2%29%2C+x%3D0..1%2C+y%3D0..1\nfunction representation(form: Data[\"form\"]): (x: number) => number {\n  switch (form) {\n    case 'linear': return x => x;\n    case 'bell': return x => 1 / (1 + (5 * (x - 1 / 2)) ** 2) ** (3 / 2);\n    case 'exp': return x => x ** 5;\n    case 'log': return x => x ** (1 / 5);\n    case 'horizontal': return _ => 1;\n    default: return () => 1;\n  }\n}\n\n\nexport default function Graph({ definition }: Props) {\n  const [src, setSrc] = useState();\n\n  const canvas = useCallback(node => {\n    if (node !== null) {\n      const ctx = node.getContext('2d');\n      ctx.clearRect(0, 0, node.width, node.height);\n\n      if (definition.title) {\n        ctx.textAlign = \"center\";\n        ctx.font = `${titleFontSize}px 'Indie Flower'`;\n        ctx.fillText(definition.title, width / 2, padding + titleFontSize / 2);\n      }\n\n      if (definition.yAxis) {\n        const x = padding;\n        const y = height / 2;\n\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.rotate(-Math.PI / 2);\n\n        ctx.textAlign = \"center\";\n        ctx.font = `${axisFontSize}px 'Indie Flower'`;\n        ctx.fillText(definition.yAxis, 0, axisFontSize / 2);\n\n        ctx.restore();\n      }\n\n      if (definition.xAxis) {\n        ctx.textAlign = \"center\";\n        ctx.font = `${axisFontSize}px 'Indie Flower'`;\n        ctx.fillText(definition.xAxis, width / 2, height - padding);\n      }\n\n      const rc = rough.canvas(node);\n      // Vertical axis line\n      rc.line(padding + axisFontSize, padding, padding + axisFontSize, height - padding);\n      rc.line(padding + axisFontSize, padding + 10, padding + axisFontSize + 10, padding + 20);\n      rc.line(padding + axisFontSize, padding + 10, padding + axisFontSize - 10, padding + 20);\n\n      // Horizontal axis line\n      rc.line(padding, height - (axisFontSize + padding), width - padding, height - (axisFontSize + padding));\n      rc.line(width - padding - 10, height - (axisFontSize + padding), width - padding - 20, height - (axisFontSize + padding) + 10);\n      rc.line(width - padding - 10, height - (axisFontSize + padding), width - padding - 20, height - (axisFontSize + padding) - 10);\n\n\n      // Graph\n\n      definition.data.forEach((data, index) => {\n        const p = pointsFrom(data, index),\n              d = data.density;\n        if (d === 'infinite') {\n          rc.curve(p, { stroke: data.color });\n        } else {\n          const width = (endX - startX) / d - padding,\n          axisY = height - axisFontSize - padding;\n\n          p.forEach(([x, y]) => {\n            rc.rectangle(x, y, width, axisY - y, { fill: data.color });\n          });\n        }\n      });\n\n      definition.data\n        .filter(data => Boolean(data.label))\n        .forEach((data, index) => {\n          const y = padding + titleFontSize + index * (labelFontSize + padding);\n          rc.rectangle(padding + axisFontSize + 20, y, 10, 10, { fill: data.color, fillStyle: 'cross-hatch' });\n          ctx.textAlign = \"left\";\n          ctx.font = `${labelFontSize}px 'Indie Flower'`;\n          ctx.fillText(data.label, padding + axisFontSize + padding + 20 + 10, y + labelFontSize / 2);\n        })\n\n\n      setSrc(node.toDataURL());\n    }\n  }, [definition]);\n  return (\n    <Center>\n      <div style={{ fontFamily: 'Indie Flower' }}>&nbsp;</div> {/* Preload */}\n      <canvas style={{ display: 'none' }} ref={canvas} width={width} height={height} />\n      <img src={src} alt=\"Graphz!\" width={width} height={height} />\n    </Center>\n  );\n}\n\nconst Center = styled.div`\n  text-align: center;\n`;","import styled from \"styled-components\";\n\nconst BigButton = styled.a`\n display:inline-block;\n padding:0.7em 1.4em;\n margin:0 0.3em 0.3em 0;\n border-radius:0.15em;\n box-sizing: border-box;\n text-decoration:none;\n font-family:'Roboto',sans-serif;\n text-transform:uppercase;\n font-weight:400;\n color:#FFFFFF;\n background-color:#3369ff;\n box-shadow:inset 0 -0.6em 0 -0.35em rgba(255,255,255,0.37);\n text-align:center;\n position:relative;\n}\n&:active{\n top:0.1em;\n} \n`;\n\nexport default BigButton;","import React, { ChangeEvent, useState } from 'react';\nimport { GithubPicker } from 'react-color';\nimport styled from 'styled-components';\nimport BigButton from './BigButton';\n\nconst defaultColors = ['#B80000', '#DB3E00', '#FCCB00', '#008B02', '#006B76', '#1273DE', '#004DCF', '#000000', '#EB9694', '#FAD0C3', '#FEF3BD', '#C1E1C5', '#BEDADC', '#C4DEF6', '#BED3F3', '#B7B7B7'];\n\ntype Props = {\n  color: string;\n  onChange: (newColor: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => void;\n}\n\nfunction fakeEvent(value: string): ChangeEvent<HTMLInputElement> {\n  return {\n    preventDefault: () => { },\n    target: {\n      value,\n    }\n  } as ChangeEvent<HTMLInputElement>\n}\n\ntype Color = {\n  hex: string;\n}\n\nexport default function ColorPicker({ color, onChange }: Props) {\n  const [showing, setShowing] = useState(false);\n  return (\n    <Wrapper>\n      <BigButton onClick={() => setShowing(!showing)} style={{ backgroundColor: color }}>🎨</BigButton>\n      {showing && <Popover>\n        <GithubPicker\n          color={color}\n          onChangeComplete={({ hex }: Color) => { setShowing(false); onChange(fakeEvent(hex)) }}\n          colors={defaultColors}\n        />\n      </Popover>}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.span`\n  position: relative;\n`;\n\nconst Popover = styled.div`\n  position: absolute;\n  z-index: 2;\n  top: 35px;\n  left: 20px;\n`;","import styled from 'styled-components';\nimport { color } from './GlobalStyle';\n\n\nexport default function BigInput(props: React.InputHTMLAttributes<HTMLInputElement> & { label: string }) {\n  const { label, ...rest } = props;\n  return (\n    <Wrapper>\n      <InputField placeholder={label} {...rest} />\n      <Label>{label}</Label>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  padding: 15px 0 0;\n  margin-top: 10px;\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  z-index: -1;\n  top: 0;\n  display: block;\n  transition: 0.2s;\n  font-size: 1rem;\n  color: ${color};\n`;\n\nconst InputField = styled.input`\n  font-family: inherit;\n  width: 100%;\n  border: 0;\n  border-bottom: 2px solid ${color};\n  outline: 0;\n  font-size: 1.3rem;\n  color: ${color};\n  padding: 7px 0;\n  background: transparent;\n  transition: border-color 0.2s;\n  &:required,&:invalid { box-shadow:none; }\n\n  &::placeholder {\n    color: transparent;\n  }\n\n  &:placeholder-shown ~ ${Label} {\n    font-size: 1.3rem;\n    cursor: text;\n    top: 20px;\n  }\n\n  &:focus {\n    ~ ${Label} {\n      position: absolute;\n      top: 0;\n      display: block;\n      transition: 0.2s;\n      font-size: 1rem;\n      color: #db7093;\n      font-weight:700;    \n    }\n    padding-bottom: 6px;  \n    font-weight: 700;\n    border-width: 3px;\n    border-image: linear-gradient(to right, #db7093, #fd1bf9);\n    border-image-slice: 1;\n  }\n`;\n","import React from 'react';\n\nimport { Data, Definition, density_, newData, toDirection, toForm, _density } from './definition';\n\nimport ColorPicker from './ColorPicker';\nimport BigInput from './BigInput';\nimport styled from 'styled-components';\nimport BigButton from './BigButton';\n\ntype Props = {\n  definition: Definition;\n  update: (defs: Definition) => void;\n}\n\nfunction notEmpty<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nexport default function GraphSelector({ definition, update }: Props) {\n  return (\n    <>\n      <BigInput label=\"Title\" value={definition.title} onChange={(e) => update({ ...definition, title: e.target.value })} />\n      <BigInput label=\"Horizontal axis\" value={definition.xAxis} onChange={(e) => update({ ...definition, xAxis: e.target.value })} />\n      <BigInput label=\"Vertical axis\" value={definition.yAxis} onChange={(e) => update({ ...definition, yAxis: e.target.value })} />\n\n      <h3>Lines</h3>\n      <ul>\n        {definition.data.map((value, key) => {\n          function updateOne<T>(target: T, f: (newVal: T, og: Data) => (Data | null)): void {\n            update({\n              ...definition,\n              data: definition.data.map((val, index) => index === key ? f(target, val) : val).filter(notEmpty)\n            });\n          }\n\n          return (\n            <li key={`label-${key}`}>\n              <Select value={value.form} onChange={e => updateOne(e.target.value, form => ({ ...value, form: toForm(form) }))}>\n                <option value=\"linear\">Linear</option>\n                <option value=\"horizontal\">Horizontal</option>\n                <option value=\"bell\">Bell</option>\n                <option value=\"exp\">Exponential</option>\n                <option value=\"log\">Logarithmic</option>\n              </Select>\n\n              <Select value={value.direction} onChange={e => updateOne(e.target.value, direction => ({ ...value, direction: toDirection(direction) }))}>\n                <option value=\"upward\">Up ➚</option>\n                <option value=\"downward\">Down ➘</option>\n              </Select>\n\n              <Range min=\"1\" max={density_('infinite')} step=\"1\" value={density_(value.density)} onChange={e => updateOne(e.target.value, newD => ({ ...value, density: _density(newD) }))} />\n\n              <Input value={value.label} placeholder=\"Label\" onChange={e => updateOne(e.target.value, label => ({ ...value, label }))} />\n\n              <ColorPicker color={value.color} onChange={e => updateOne(e.target.value, color => ({ ...value, color }))} />\n\n              <BigButton onClick={e => updateOne(e, _ => null)}>🗑️</BigButton>\n            </li>);\n        })}\n      </ul>\n      <BigButton onClick={() => update(newData(definition))}>Add label</BigButton>\n    </>\n  );\n}\n\nfunction Range(props: React.InputHTMLAttributes<HTMLInputElement>) {\n  return <RangeInput {...props} type=\"range\"  />;\n}\n\nconst RangeInput = styled.input`\n  width: 10em;\n  margin: -3.1px 0;\n  background-color: transparent;\n  -webkit-appearance: none;\n\n  &:focus {\n    outline: none;\n  }\n  &::-webkit-slider-runnable-track {\n    background: rgba(72, 77, 77, 0.2);\n    border: 0;\n    width: 100%;\n    height: 24.2px;\n    cursor: pointer;\n  }\n  &::-webkit-slider-thumb {\n    margin-top: 3.1px;\n    width: 50px;\n    height: 18px;\n    background: rgba(255, 67, 95, 0.93);\n    border: 0;\n    border-radius: 1px;\n    cursor: pointer;\n    -webkit-appearance: none;\n  }\n  &:focus::-webkit-slider-runnable-track {\n    background: #545a5a;\n  }\n  &::-moz-range-track {\n    background: rgba(72, 77, 77, 0.2);\n    border: 0;\n    width: 100%;\n    height: 24.2px;\n    cursor: pointer;\n  }\n  &::-moz-range-thumb {\n    width: 50px;\n    height: 18px;\n    background: rgba(255, 67, 95, 0.93);\n    border: 0;\n    border-radius: 1px;\n    cursor: pointer;\n  }\n  &::-ms-track {\n    background: transparent;\n    border-color: transparent;\n    border-width: 0 0;\n    color: transparent;\n    width: 100%;\n    height: 24.2px;\n    cursor: pointer;\n  }\n  &::-ms-fill-lower {\n    background: #3c4040;\n    border: 0;\n  }\n  &::-ms-fill-upper {\n    background: rgba(72, 77, 77, 0.2);\n    border: 0;\n  }\n  &::-ms-thumb {\n    width: 50px;\n    height: 18px;\n    background: rgba(255, 67, 95, 0.93);\n    border: 0;\n    border-radius: 1px;\n    cursor: pointer;\n    margin-top: 0px;\n    /*Needed to keep the Edge thumb centred*/\n  }\n  &:focus::-ms-fill-lower {\n    background: rgba(72, 77, 77, 0.2);\n  }\n  &:focus::-ms-fill-upper {\n    background: #545a5a;\n  }\n`;\n\nconst Input = styled.input`\n  padding: 0.7em 1.4em;\n  margin: 0 0.3em 0.3em 0;\n  width: 10em;\n  border: none;\n  border-radius: 0.4rem;\n  outline: none;\n`;\n\nconst Select = styled.select`\npadding: 0.7em 1.4em;\nmargin: 0 0.3em 0.3em 0;\n  width: 10em;\n  border: none;\n  border-radius: 0.4rem;\n  outline: none;\n`;\n\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Definition, empty } from './definition';\nimport Footer from './Footer';\nimport Graph from './Graph';\nimport GraphSelector from './GraphSelector';\n\nfunction App() {\n  const [definition, setDefinition] = useState<Definition>(empty());\n\n  return (\n    <div>\n      <header>\n        <Title>Rough Graph</Title>\n        <p>\n          For when you need to show a graph, but the values don't really matter.<br />\n          Only the general behavior.\n        </p>\n      </header>\n\n      <h2>Definition</h2>\n      <GraphSelector definition={definition} update={newDefs => setDefinition(newDefs)} />\n\n\n      <h2>Graph</h2>\n      <Graph definition={definition} />\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\nconst Title = styled.h1`\n  line-height: 1.2\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GlobalStyle from './GlobalStyle';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}